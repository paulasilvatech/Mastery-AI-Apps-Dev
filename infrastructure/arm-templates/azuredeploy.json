{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "description": "Main ARM template for Mastery AI Code Development Workshop",
    "author": "Workshop Team"
  },
  "parameters": {
    "projectName": {
      "type": "string",
      "defaultValue": "masteryai",
      "metadata": {
        "description": "Name of the project, used for resource naming"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "staging",
        "prod"
      ],
      "metadata": {
        "description": "Environment name"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "openAiSku": {
      "type": "string",
      "defaultValue": "S0",
      "metadata": {
        "description": "SKU for Azure OpenAI Service"
      }
    },
    "searchServiceSku": {
      "type": "string",
      "defaultValue": "standard",
      "metadata": {
        "description": "SKU for Azure Cognitive Search"
      }
    },
    "enableDiagnostics": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable diagnostic logging"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "Project": "MasteryAIWorkshop",
        "ManagedBy": "ARM"
      },
      "metadata": {
        "description": "Tags to apply to all resources"
      }
    }
  },
  "variables": {
    "uniqueSuffix": "[uniqueString(resourceGroup().id)]",
    "resourcePrefix": "[concat(parameters('projectName'), '-', parameters('environment'))]",
    "storageAccountName": "[concat('st', parameters('projectName'), parameters('environment'), variables('uniqueSuffix'))]",
    "openAiName": "[concat('openai-', variables('resourcePrefix'), '-', variables('uniqueSuffix'))]",
    "searchServiceName": "[concat('search-', variables('resourcePrefix'), '-', variables('uniqueSuffix'))]",
    "cosmosDbAccountName": "[concat('cosmos-', variables('resourcePrefix'), '-', variables('uniqueSuffix'))]",
    "appInsightsName": "[concat('appi-', variables('resourcePrefix'))]",
    "logAnalyticsName": "[concat('log-', variables('resourcePrefix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[variables('logAnalyticsName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "tags": "[parameters('tags')]",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('openAiName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[parameters('openAiSku')]"
      },
      "kind": "OpenAI",
      "properties": {
        "customSubDomainName": "[variables('openAiName')]",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2023-11-01",
      "name": "[variables('searchServiceName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[parameters('searchServiceSku')]"
      },
      "properties": {
        "replicaCount": 1,
        "partitionCount": 1,
        "hostingMode": "default"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[variables('cosmosDbAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "capabilities": [
          {
            "name": "EnableServerless"
          }
        ]
      }
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "openAiEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('openAiName'))).endpoint]"
    },
    "searchServiceEndpoint": {
      "type": "string",
      "value": "[concat('https://', variables('searchServiceName'), '.search.windows.net')]"
    },
    "cosmosDbEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))).documentEndpoint]"
    },
    "appInsightsConnectionString": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).ConnectionString]"
    }
  }
}