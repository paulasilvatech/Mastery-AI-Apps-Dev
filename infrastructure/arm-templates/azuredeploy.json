{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "description": "Master ARM template for Mastery AI Code Development Workshop - Supports all 30 modules",
    "author": "Workshop Team",
    "version": "1.0.0"
  },
  "parameters": {
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "staging",
        "prod"
      ],
      "metadata": {
        "description": "Environment name"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "East US 2",
      "metadata": {
        "description": "Azure region for all resources"
      }
    },
    "moduleNumber": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 30,
      "metadata": {
        "description": "Workshop module number (1-30)"
      }
    },
    "resourcePrefix": {
      "type": "string",
      "defaultValue": "workshop",
      "maxLength": 8,
      "metadata": {
        "description": "Prefix for resource names"
      }
    },
    "ownerEmail": {
      "type": "string",
      "defaultValue": "workshop@example.com",
      "metadata": {
        "description": "Email of the resource owner"
      }
    },
    "enableMonitoring": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable monitoring resources"
      }
    },
    "enableAIFeatures": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable AI-specific resources"
      }
    }
  },
  "variables": {
    "uniqueSuffix": "[substring(uniqueString(subscription().subscriptionId, parameters('location')), 0, 6)]",
    "resourceGroupName": "[concat('rg-', parameters('resourcePrefix'), '-module', padLeft(parameters('moduleNumber'), 2, '0'), '-', parameters('environment'), '-', variables('uniqueSuffix'))]",
    "commonTags": {
      "Environment": "[parameters('environment')]",
      "Module": "[concat('Module ', parameters('moduleNumber'))]",
      "Workshop": "Mastery AI Code Development",
      "ManagedBy": "ARM Template",
      "Owner": "[parameters('ownerEmail')]",
      "CostCenter": "Training",
      "CreatedDate": "[utcNow('yyyy-MM-dd')]"
    },
    "moduleTrack": "[if(lessOrEquals(parameters('moduleNumber'), 5), 'fundamentals', if(lessOrEquals(parameters('moduleNumber'), 10), 'intermediate', if(lessOrEquals(parameters('moduleNumber'), 15), 'advanced', if(lessOrEquals(parameters('moduleNumber'), 20), 'enterprise', if(lessOrEquals(parameters('moduleNumber'), 25), 'ai-agents', 'enterprise-mastery')))))]",
    "deploymentConfig": {
      "fundamentals": {
        "deployStorage": true,
        "deployAppService": "[greaterOrEquals(parameters('moduleNumber'), 3)]",
        "deployDatabase": false,
        "deployAI": false
      },
      "intermediate": {
        "deployStorage": true,
        "deployAppService": true,
        "deployDatabase": true,
        "deployAI": false
      },
      "advanced": {
        "deployStorage": true,
        "deployAppService": true,
        "deployDatabase": true,
        "deployAI": false,
        "deployKubernetes": true
      },
      "enterprise": {
        "deployStorage": true,
        "deployAppService": true,
        "deployDatabase": true,
        "deployAI": true,
        "deployKubernetes": true
      },
      "ai-agents": {
        "deployStorage": true,
        "deployAppService": true,
        "deployDatabase": true,
        "deployAI": true,
        "deployKubernetes": false,
        "deployContainerApps": true
      },
      "enterprise-mastery": {
        "deployStorage": true,
        "deployAppService": true,
        "deployDatabase": true,
        "deployAI": true,
        "deployKubernetes": true,
        "deployContainerApps": true
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[variables('resourceGroupName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "storage-deployment",
      "resourceGroup": "[variables('resourceGroupName')]",
      "condition": "[variables('deploymentConfig')[variables('moduleTrack')].deployStorage]",
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'modules/storage.json')]"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "moduleNumber": {
            "value": "[parameters('moduleNumber')]"
          },
          "suffix": {
            "value": "[variables('uniqueSuffix')]"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "monitoring-deployment",
      "resourceGroup": "[variables('resourceGroupName')]",
      "condition": "[parameters('enableMonitoring')]",
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'modules/monitoring.json')]"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "moduleNumber": {
            "value": "[parameters('moduleNumber')]"
          },
          "suffix": {
            "value": "[variables('uniqueSuffix')]"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "compute-deployment",
      "resourceGroup": "[variables('resourceGroupName')]",
      "condition": "[or(variables('deploymentConfig')[variables('moduleTrack')].deployAppService, variables('deploymentConfig')[variables('moduleTrack')].deployKubernetes)]",
      "dependsOn": [
        "[variables('resourceGroupName')]",
        "monitoring-deployment"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'modules/compute.json')]"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "moduleNumber": {
            "value": "[parameters('moduleNumber')]"
          },
          "suffix": {
            "value": "[variables('uniqueSuffix')]"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[if(parameters('enableMonitoring'), reference('monitoring-deployment').outputs.logAnalyticsWorkspaceId.value, '')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "networking-deployment",
      "resourceGroup": "[variables('resourceGroupName')]",
      "condition": "[or(variables('deploymentConfig')[variables('moduleTrack')].deployKubernetes, greater(parameters('moduleNumber'), 10))]",
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'modules/networking.json')]"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "moduleNumber": {
            "value": "[parameters('moduleNumber')]"
          },
          "suffix": {
            "value": "[variables('uniqueSuffix')]"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "ai-services-deployment",
      "resourceGroup": "[variables('resourceGroupName')]",
      "condition": "[and(parameters('enableAIFeatures'), variables('deploymentConfig')[variables('moduleTrack')].deployAI)]",
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'modules/ai-services.json')]"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "moduleNumber": {
            "value": "[parameters('moduleNumber')]"
          },
          "suffix": {
            "value": "[variables('uniqueSuffix')]"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "security-deployment",
      "resourceGroup": "[variables('resourceGroupName')]",
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[concat('kv-', parameters('moduleNumber'), '-', parameters('environment'), '-', variables('uniqueSuffix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": false,
                "enableRbacAuthorization": true,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 7,
                "enablePurgeProtection": "[equals(parameters('environment'), 'prod')]"
              },
              "tags": "[variables('commonTags')]"
            }
          ],
          "outputs": {
            "keyVaultName": {
              "type": "string",
              "value": "[concat('kv-', parameters('moduleNumber'), '-', parameters('environment'), '-', variables('uniqueSuffix'))]"
            },
            "keyVaultId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', concat('kv-', parameters('moduleNumber'), '-', parameters('environment'), '-', variables('uniqueSuffix')))]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "value": "[variables('resourceGroupName')]"
    },
    "resourceGroupId": {
      "type": "string",
      "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
    },
    "moduleTrack": {
      "type": "string",
      "value": "[variables('moduleTrack')]"
    },
    "deploymentSummary": {
      "type": "object",
      "value": {
        "moduleNumber": "[parameters('moduleNumber')]",
        "environment": "[parameters('environment')]",
        "location": "[parameters('location')]",
        "track": "[variables('moduleTrack')]",
        "uniqueSuffix": "[variables('uniqueSuffix')]",
        "deployedComponents": {
          "storage": "[variables('deploymentConfig')[variables('moduleTrack')].deployStorage]",
          "monitoring": "[parameters('enableMonitoring')]",
          "compute": "[or(variables('deploymentConfig')[variables('moduleTrack')].deployAppService, variables('deploymentConfig')[variables('moduleTrack')].deployKubernetes)]",
          "networking": "[or(variables('deploymentConfig')[variables('moduleTrack')].deployKubernetes, greater(parameters('moduleNumber'), 10))]",
          "aiServices": "[and(parameters('enableAIFeatures'), variables('deploymentConfig')[variables('moduleTrack')].deployAI)]",
          "security": true
        }
      }
    },
    "keyVaultName": {
      "type": "string",
      "value": "[reference('security-deployment').outputs.keyVaultName.value]"
    },
    "storageAccountName": {
      "type": "string",
      "condition": "[variables('deploymentConfig')[variables('moduleTrack')].deployStorage]",
      "value": "[if(variables('deploymentConfig')[variables('moduleTrack')].deployStorage, reference('storage-deployment').outputs.storageAccountName.value, '')]"
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "condition": "[parameters('enableMonitoring')]",
      "value": "[if(parameters('enableMonitoring'), reference('monitoring-deployment').outputs.logAnalyticsWorkspaceId.value, '')]"
    },
    "applicationInsightsConnectionString": {
      "type": "string",
      "condition": "[parameters('enableMonitoring')]",
      "value": "[if(parameters('enableMonitoring'), reference('monitoring-deployment').outputs.applicationInsightsConnectionString.value, '')]"
    },
    "quickAccessUrls": {
      "type": "object",
      "value": {
        "azurePortal": "[concat('https://portal.azure.com/#@', tenant().tenantId, '/resource', subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName')))]",
        "resourceGroup": "[concat('https://portal.azure.com/#@', tenant().tenantId, '/resource', subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName')))]",
        "keyVault": "[concat('https://portal.azure.com/#@', tenant().tenantId, '/resource', subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName')), '/providers/Microsoft.KeyVault/vaults/', reference('security-deployment').outputs.keyVaultName.value)]"
      }
    },
    "estimatedMonthlyCost": {
      "type": "object",
      "value": {
        "environment": "[parameters('environment')]",
        "estimate": "[if(equals(parameters('environment'), 'dev'), if(lessOrEquals(parameters('moduleNumber'), 5), '$10-25', if(lessOrEquals(parameters('moduleNumber'), 10), '$25-50', if(lessOrEquals(parameters('moduleNumber'), 15), '$50-100', if(lessOrEquals(parameters('moduleNumber'), 20), '$100-200', if(lessOrEquals(parameters('moduleNumber'), 25), '$150-300', '$200-400'))))), if(equals(parameters('environment'), 'staging'), if(lessOrEquals(parameters('moduleNumber'), 5), '$25-50', if(lessOrEquals(parameters('moduleNumber'), 10), '$50-100', if(lessOrEquals(parameters('moduleNumber'), 15), '$100-200', if(lessOrEquals(parameters('moduleNumber'), 20), '$200-400', if(lessOrEquals(parameters('moduleNumber'), 25), '$300-600', '$400-800'))))), if(lessOrEquals(parameters('moduleNumber'), 5), '$50-100', if(lessOrEquals(parameters('moduleNumber'), 10), '$100-200', if(lessOrEquals(parameters('moduleNumber'), 15), '$200-500', if(lessOrEquals(parameters('moduleNumber'), 20), '$500-1000', if(lessOrEquals(parameters('moduleNumber'), 25), '$750-1500', '$1000-2000')))))))]",
        "currency": "USD",
        "note": "Estimates are approximate and may vary based on actual usage"
      }
    },
    "nextSteps": {
      "type": "array",
      "value": [
        "Verify resources in Azure Portal",
        "Test connectivity to deployed services",
        "Configure authentication and access",
        "Begin module exercises",
        "Set up monitoring alerts",
        "Review security settings"
      ]
    }
  }
}
