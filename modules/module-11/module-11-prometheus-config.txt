# Module 11: Prometheus Configuration
# Monitoring configuration for microservices

global:
  scrape_interval: 15s          # How frequently to scrape targets
  evaluation_interval: 15s      # How frequently to evaluate rules
  external_labels:
    monitor: 'microservices-monitor'
    environment: 'development'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - 'alertmanager:9093'

# Rule files
rule_files:
  - '/etc/prometheus/rules/*.yml'

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    metrics_path: '/metrics'
    scrape_interval: 5s

  # Microservices
  - job_name: 'microservices'
    static_configs:
      - targets:
        - 'api-gateway:8080'
        - 'user-service:8080'
        - 'product-service:8080'
        - 'order-service:8080'
        - 'notification-service:8080'
        - 'inventory-service:8080'
        - 'saga-orchestrator:8080'
    metrics_path: '/metrics'
    scrape_interval: 10s
    relabel_configs:
      - source_labels: [__address__]
        regex: '([^:]+):.*'
        target_label: service
        replacement: '$1'

  # Infrastructure Services
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    metrics_path: '/metrics'
    scrape_interval: 10s

  - job_name: 'rabbitmq'
    static_configs:
      - targets: ['rabbitmq:15692']
    metrics_path: '/metrics'
    scrape_interval: 10s

  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    metrics_path: '/metrics'
    scrape_interval: 10s

  # Node Exporter (if running)
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
    metrics_path: '/metrics'
    scrape_interval: 10s

  # Kubernetes metrics (if running in k8s)
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Service Discovery via Docker
  - job_name: 'docker'
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
    relabel_configs:
      # Only keep containers with prometheus-scrape label
      - source_labels: [__meta_docker_container_label_prometheus_scrape]
        regex: 'true'
        action: keep
      # Use container name as instance
      - source_labels: [__meta_docker_container_name]
        target_label: instance
      # Extract metrics path from label
      - source_labels: [__meta_docker_container_label_prometheus_path]
        target_label: __metrics_path__
      # Extract port from label
      - source_labels: [__address__, __meta_docker_container_label_prometheus_port]
        regex: '([^:]+):.*'
        target_label: __address__
        replacement: '$1:${2}'