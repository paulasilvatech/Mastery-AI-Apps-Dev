# Module 11: Microservices Architecture
# Environment Variables Configuration
# Copy this file to .env and update with your values

# ==========================================
# General Configuration
# ==========================================
ENVIRONMENT=development
LOG_LEVEL=INFO
DEBUG=True

# ==========================================
# Service Configuration
# ==========================================
# API Gateway
API_GATEWAY_PORT=8000
API_GATEWAY_HOST=0.0.0.0

# Microservices Ports (internal)
USER_SERVICE_PORT=8000
PRODUCT_SERVICE_PORT=8000
ORDER_SERVICE_PORT=8000
NOTIFICATION_SERVICE_PORT=8000
INVENTORY_SERVICE_PORT=8000
SAGA_ORCHESTRATOR_PORT=8000

# Service URLs (for inter-service communication)
USER_SERVICE_URL=http://user-service:8000
PRODUCT_SERVICE_URL=http://product-service:8000
ORDER_SERVICE_URL=http://order-service:8000
NOTIFICATION_SERVICE_URL=http://notification-service:8000
INVENTORY_SERVICE_URL=http://inventory-service:8000

# ==========================================
# Database Configuration
# ==========================================
# PostgreSQL
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_USER=microservices
POSTGRES_PASSWORD=changeme123
POSTGRES_DB=microservices

# Database URLs
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
EVENT_STORE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/eventstore

# Connection Pool
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=40
DB_POOL_TIMEOUT=30

# ==========================================
# Redis Configuration
# ==========================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}

# Cache TTL (seconds)
CACHE_DEFAULT_TTL=300
CACHE_USER_TTL=600
CACHE_PRODUCT_TTL=1800

# ==========================================
# RabbitMQ Configuration
# ==========================================
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672
RABBITMQ_USER=admin
RABBITMQ_PASSWORD=admin123
RABBITMQ_VHOST=/
AMQP_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:${RABBITMQ_PORT}${RABBITMQ_VHOST}

# Exchange Configuration
EVENTS_EXCHANGE=events
COMMANDS_EXCHANGE=commands
DEAD_LETTER_EXCHANGE=dead-letter

# ==========================================
# Security Configuration
# ==========================================
# JWT Settings
JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# API Keys
API_KEY_HEADER=X-API-Key
INTERNAL_API_KEY=internal-service-communication-key

# CORS
CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]
CORS_ALLOW_CREDENTIALS=true
CORS_ALLOW_METHODS=["GET", "POST", "PUT", "DELETE", "OPTIONS"]
CORS_ALLOW_HEADERS=["*"]

# ==========================================
# Rate Limiting
# ==========================================
RATE_LIMIT_ENABLED=true
RATE_LIMIT_CALLS=100
RATE_LIMIT_PERIOD=60
RATE_LIMIT_SCOPE=ip

# ==========================================
# Circuit Breaker Configuration
# ==========================================
CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
CIRCUIT_BREAKER_RECOVERY_TIMEOUT=30
CIRCUIT_BREAKER_EXPECTED_EXCEPTION=RequestException

# ==========================================
# Monitoring & Observability
# ==========================================
# Prometheus
PROMETHEUS_PORT=9090
METRICS_ENABLED=true
METRICS_PORT=8080

# Grafana
GRAFANA_PORT=3000
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=admin123

# Jaeger Tracing
JAEGER_AGENT_HOST=jaeger
JAEGER_AGENT_PORT=6831
JAEGER_COLLECTOR_ENDPOINT=http://jaeger:14268/api/traces
JAEGER_ENABLED=true
JAEGER_SERVICE_NAME=${SERVICE_NAME}

# OpenTelemetry
OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
OTEL_EXPORTER_OTLP_INSECURE=true
OTEL_SERVICE_NAME=${SERVICE_NAME}
OTEL_TRACES_EXPORTER=otlp
OTEL_METRICS_EXPORTER=otlp

# ==========================================
# Service Discovery
# ==========================================
SERVICE_DISCOVERY_ENABLED=true
SERVICE_DISCOVERY_TYPE=docker
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=5

# ==========================================
# Saga Configuration
# ==========================================
SAGA_TIMEOUT_SECONDS=300
SAGA_MAX_RETRIES=3
SAGA_RETRY_DELAY_SECONDS=1

# ==========================================
# Feature Flags
# ==========================================
FEATURE_CACHE_ENABLED=true
FEATURE_CIRCUIT_BREAKER_ENABLED=true
FEATURE_DISTRIBUTED_TRACING_ENABLED=true
FEATURE_SAGA_ENABLED=true

# ==========================================
# External Services (Exercise 3)
# ==========================================
# HashiCorp Vault
VAULT_ADDR=http://vault:8200
VAULT_TOKEN=dev-token

# Payment Gateway (Mock)
PAYMENT_GATEWAY_URL=http://payment-gateway:8000
PAYMENT_GATEWAY_API_KEY=mock-payment-key

# ==========================================
# Development Settings
# ==========================================
# Hot Reload
RELOAD=true
RELOAD_DIRS=["app", "domain", "infrastructure"]

# Testing
TEST_DATABASE_URL=postgresql://test:test@localhost:5433/test_db
TEST_REDIS_URL=redis://localhost:6380

# ==========================================
# Docker Settings
# ==========================================
DOCKER_REGISTRY=ghcr.io
DOCKER_NAMESPACE=your-namespace
DOCKER_TAG=latest